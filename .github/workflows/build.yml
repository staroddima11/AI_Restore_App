kkname: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip zip unzip openjdk-17-jdk wget
        pip install buildozer cython

    - name: Install Android SDK (fixed path)
      env:
        ANDROID_HOME: ${{ github.workspace }}/android-sdk
        ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      run: |
        mkdir -p $ANDROID_HOME/cmdline-tools
        cd $ANDROID_HOME/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
        unzip -q tools.zip
        mkdir -p $ANDROID_HOME/cmdline-tools/latest
        mv cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Verify AIDL
      run: |
        if [ ! -f "${{ github.workspace }}/android-sdk/build-tools/33.0.2/aidl" ]; then
          echo "AIDL not found!"; ls -R ${{ github.workspace }}/android-sdk/build-tools; exit 1;
        fi

    - name: Build APK
      env:
        ANDROID_HOME: ${{ github.workspace }}/android-sdk
        ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      run: |
        export PATH=$PATH:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: bin/*.apk
