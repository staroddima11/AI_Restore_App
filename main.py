import os
from PIL import Image, ImageEnhance, ImageFilter
import numpy as np
import imageio.v3 as iio
import subprocess
from datetime import datetime

# –ü–∞–ø–∫–∏
input_folder = "/storage/emulated/0/AI_Restore"
output_folder = "/storage/emulated/0/GOTOVOE"
os.makedirs(output_folder, exist_ok=True)

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
supported_ext = (".jpg", ".jpeg", ".png", ".bmp", ".webp")

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
files = [f for f in os.listdir(input_folder) if f.lower().endswith(supported_ext)]

if not files:
    print("‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤", input_folder)
    exit()

print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(files)} —Ñ–∞–π–ª–æ–≤. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...\n")

for file in files:
    photo_path = os.path.join(input_folder, file)
    print(f"üì∑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {photo_path}")

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
        img = iio.imread(photo_path)
        img = img.astype(np.float32) / 255.0

        pil_img = Image.fromarray((img * 255).astype(np.uint8))
        pil_img = pil_img.filter(ImageFilter.MedianFilter(size=3))
        pil_img = pil_img.filter(ImageFilter.BoxBlur(radius=1))

        enhancer = ImageEnhance.Contrast(pil_img)
        final_img = enhancer.enhance(1.3)
        final_img = final_img.filter(ImageFilter.SHARPEN)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è
        name, ext = os.path.splitext(file)
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        output_file = os.path.join(output_folder, f"{name}_restored_{timestamp}{ext}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        final_img.save(output_file)
        print(f"‚úÖ –ì–æ—Ç–æ–≤–æ: {output_file}\n")

    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file}: {e}")

# –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–¥–∏–∞–±–∞–∑—É Android
try:
    subprocess.run(["termux-media-scan", output_folder])
    print("üì± –ì–∞–ª–µ—Ä–µ—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚Äî —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã.")
except Exception as e:
    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–¥–∏–∞–±–∞–∑—É: {e}")
